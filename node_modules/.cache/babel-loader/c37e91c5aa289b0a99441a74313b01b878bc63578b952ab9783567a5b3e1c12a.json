{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\glenn\\\\Desktop\\\\react\\\\react-complete-guide\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./Expenses.css\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Expenses = props => {\n  _s();\n  const [filteredYear, setFilter] = useState(\"2020\");\n  let filteredInfoText = \"2019, 2021 & 2022\";\n  if (filteredYear === \"2019\") {\n    filteredInfoText = \"2020, 2021 & 2022\";\n  } else if (filteredYear === \"2021\") {\n    filteredInfoText = \"2019, 2020 & 2022\";\n  } else if (filteredYear === \"2022\") {\n    filteredInfoText = \"2019, 2020 & 2021\";\n  } else {\n    filteredInfoText = \"2019, 2021 & 2022\";\n  }\n  const filterExpensesHandler = selectedYear => {\n    setFilter(selectedYear);\n    props.onFilterExpenses(selectedYear);\n  };\n  const filteredExpenses = props.items.filter(expense => {\n    // filter returns a new array\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: filteredYear,\n        onFilterExpenses: filterExpensesHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Data for years \", filteredInfoText, \" is hidden.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), filteredExpenses.length, filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        title: expense.title,\n        amount: expense.amount,\n        date: expense.date\n      }, expense.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Expenses, \"XA2oWEIv2oAGTF8ek2Hz4cbM6pA=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","useState","ExpenseItem","Card","ExpensesFilter","Expenses","props","filteredYear","setFilter","filteredInfoText","filterExpensesHandler","selectedYear","onFilterExpenses","filteredExpenses","items","filter","expense","date","getFullYear","toString","length","map","title","amount","id"],"sources":["C:/Users/glenn/Desktop/react/react-complete-guide/src/components/Expenses/Expenses.js"],"sourcesContent":["import React, { useState } from \"react\"\r\nimport ExpenseItem from \"./ExpenseItem\"\r\nimport \"./Expenses.css\"\r\nimport Card from \"../UI/Card\"\r\nimport ExpensesFilter from \"./ExpensesFilter\"\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilter] = useState(\"2020\")\r\n\r\n  let filteredInfoText = \"2019, 2021 & 2022\"\r\n\r\n  if (filteredYear === \"2019\") {\r\n    filteredInfoText = \"2020, 2021 & 2022\"\r\n  } else if (filteredYear === \"2021\") {\r\n    filteredInfoText = \"2019, 2020 & 2022\"\r\n  } else if (filteredYear === \"2022\") {\r\n    filteredInfoText = \"2019, 2020 & 2021\"\r\n  } else {\r\n    filteredInfoText = \"2019, 2021 & 2022\"\r\n  }\r\n\r\n  const filterExpensesHandler = (selectedYear) => {\r\n    setFilter(selectedYear)\r\n    props.onFilterExpenses(selectedYear)\r\n  }\r\n\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    // filter returns a new array\r\n    return expense.date.getFullYear().toString() === filteredYear\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <Card className='expenses'>\r\n        <ExpensesFilter\r\n          selected={filteredYear}\r\n          onFilterExpenses={filterExpensesHandler}\r\n        />\r\n        <p>Data for years {filteredInfoText} is hidden.</p>\r\n        {filteredExpenses.length}\r\n        {filteredExpenses.map((expense) => (\r\n          <ExpenseItem\r\n            key={expense.id}\r\n            title={expense.title}\r\n            amount={expense.amount}\r\n            date={expense.date}\r\n          />\r\n        ))}\r\n        ;\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Expenses\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,gBAAgB;AACvB,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,cAAc,MAAM,kBAAkB;AAAA;AAE7C,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAA;EAC1B,MAAM,CAACC,YAAY,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,MAAM,CAAC;EAElD,IAAIQ,gBAAgB,GAAG,mBAAmB;EAE1C,IAAIF,YAAY,KAAK,MAAM,EAAE;IAC3BE,gBAAgB,GAAG,mBAAmB;EACxC,CAAC,MAAM,IAAIF,YAAY,KAAK,MAAM,EAAE;IAClCE,gBAAgB,GAAG,mBAAmB;EACxC,CAAC,MAAM,IAAIF,YAAY,KAAK,MAAM,EAAE;IAClCE,gBAAgB,GAAG,mBAAmB;EACxC,CAAC,MAAM;IACLA,gBAAgB,GAAG,mBAAmB;EACxC;EAEA,MAAMC,qBAAqB,GAAIC,YAAY,IAAK;IAC9CH,SAAS,CAACG,YAAY,CAAC;IACvBL,KAAK,CAACM,gBAAgB,CAACD,YAAY,CAAC;EACtC,CAAC;EAED,MAAME,gBAAgB,GAAGP,KAAK,CAACQ,KAAK,CAACC,MAAM,CAAEC,OAAO,IAAK;IACvD;IACA,OAAOA,OAAO,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,EAAE,KAAKZ,YAAY;EAC/D,CAAC,CAAC;EAEF,oBACE;IAAA,uBACE,QAAC,IAAI;MAAC,SAAS,EAAC,UAAU;MAAA,wBACxB,QAAC,cAAc;QACb,QAAQ,EAAEA,YAAa;QACvB,gBAAgB,EAAEG;MAAsB;QAAA;QAAA;QAAA;MAAA,QACxC,eACF;QAAA,WAAG,iBAAe,EAACD,gBAAgB,EAAC,aAAW;MAAA;QAAA;QAAA;QAAA;MAAA,QAAI,EAClDI,gBAAgB,CAACO,MAAM,EACvBP,gBAAgB,CAACQ,GAAG,CAAEL,OAAO,iBAC5B,QAAC,WAAW;QAEV,KAAK,EAAEA,OAAO,CAACM,KAAM;QACrB,MAAM,EAAEN,OAAO,CAACO,MAAO;QACvB,IAAI,EAAEP,OAAO,CAACC;MAAK,GAHdD,OAAO,CAACQ,EAAE;QAAA;QAAA;QAAA;MAAA,QAKlB,CAAC,EAAC,GAEL;IAAA;MAAA;MAAA;MAAA;IAAA;EAAO;IAAA;IAAA;IAAA;EAAA,QACH;AAEV,CAAC;AAAA,GA9CKnB,QAAQ;AAAA,KAARA,QAAQ;AAgDd,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}